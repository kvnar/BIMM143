---
title: "Class 08: Mini-Project - Unsupervised Learning Analysis of Human Breast Cancer Cells"
author: "Kevyn Aguilar Ramirez (PID: A16321291)"
format: pdf
editor: visual
---

First we will read the data:

```{r}
wisc.df <- read.csv("WisconsinCancer.csv", row.names=1)
head(wisc.df)
```

Note that the first column here wisc.df\$diagnosis is a pathologist provided expert diagnosis.

```{r}
diagnosis <- as.factor(wisc.df$diagnosis)
```

Now I want to make sure I remove that column from my dataset for analysis

```{r}
wisc.data <- wisc.df[,-1]
head(wisc.data)
```

> Q1. How many observations are in this dataset?

```{r}
dim(wisc.data)
```

There are 569 observations.

> Q2. How many of the observations have a malignant diagnosis?

```{r}
table(wisc.df$diagnosis)
```

212 of the observations have a malignant diagnosis.

> Q3. How many variables/features in the data are suffixed with _mean?

```{r}
pattern <- "_mean"
length(matching_columns <- grep(pattern, colnames(wisc.data)))

```
10 variables/feature are suffixed with _mean


## Principal Component Analysis

Here we will use `prcomp()` on the `wisc.data` object - the one without the diagnosis column

First, we have to decide whether to use the `scale=TRUE` argument when we run `prcomp()`

We can look at the means and sd of each column. If they are similar then we are all good to go. If not we should use `scale=TRUE`

```{r}
colMeans(wisc.data)
```

```{r}
apply(wisc.data,2,sd)
```

These are very difference so we should scale=TRUE.

```{r}
wisc.pr <- prcomp(wisc.data, scale=TRUE)
summary(wisc.pr)
```

> Q4. From your results, what proportion of the original variance is captured by the first principal components (PC1)?

44.27%

> Q5. How many principal components (PCs) are required to describe at least 70% of the original variance in the data?

3 PCs

> Q6. How many principal components (PCs) are required to describe at least 90% of the original variance in the data?

7 PCs

We need to make our own plot.

```{r}
attributes(wisc.pr)
```

```{r}
plot(wisc.pr$x[,1], wisc.pr$x[,2], col=diagnosis)
```

```{r}
library(ggplot2)

pc <- as.data.frame(wisc.pr$x)

ggplot(pc) +
  aes(PC1, PC2, col=diagnosis) +
  geom_point()
```

> Q9. For the first principal component, what is the component of the loading vector (i.e. wisc.pr$rotation[,1]) for the feature concave.points_mean?

```{r}
wisc.pr$rotation["concave.points_mean",1]
```



> Q10. What is the minimum number of principal components required to explain 80% of the variance of the data?

```{r}
tbl <- summary(wisc.pr)
which(tbl$importance[3,] > 0.8)[1]
```
5 PCs


## Hierarchical clustering

The main function for Hierarchical clustering is called `hclust()` it takes a distance matrix as input.
```{r}
d <- dist(scale(wisc.data))
wisc.hclust <- hclust(d)
plot(wisc.hclust)
```

```{r}
plot(wisc.hclust)
abline(h=18, col="red")
grps <- cutree(wisc.hclust, h=18)
table(grps)
```

Come back here later to see how our cluster grps correspond to M or B groups.


```{r}
ggplot(pc) +
  aes(PC1, PC2, col=diagnosis) +
  geom_point()
```

## 5. Combining methods

Here we will perform clustering on PCA results rather than the original data.

In other words, we will cluster using `wisc.pr$x` - our new beter variables or PCs. We can chose as many or as few PCs to use as we like. It is your call!

```{r}
d.pc <- dist(wisc.pr$x[,1:3])

wisc.pr.hclust <- hclust(d.pc, method="ward.D2")
plot(wisc.pr.hclust)
abline(h=80, col="red")

```


```{r}
grps <- cutree(wisc.pr.hclust, h=80)
table(grps)
```

We can use `table()` function to makema cross-table as well as just a count table.
```{r}
table(diagnosis)
```


```{r}
table(grps, diagnosis)
```
Write a note here about how to read this cross-table result:
M corresponds to malignant diagnosis. There are 2 clusters; the majority of cluster 1 is malignant, and the majority of cluster 2 is benign/healthy. It is possible that the malignant individuals in cluster 2 are false positives.


## Prediction
```{r}
url <- "https://tinyurl.com/new-samples-CSV"
new <- read.csv(url)
npc <- predict(wisc.pr, newdata=new)
npc
```

```{r}
plot(wisc.pr$x[,1:2], col=grps)
points(npc[,1], npc[,2], col="blue", pch=16, cex=3)
text(npc[,1], npc[,2], c(1,2), col="white")
```
> Q18. Which of these new patients should we prioritize for follow up based on your results?
Patient 2

PCA is a method that can provide clarity to data that is confusing.






